Ball_0( x[i], y[i] )
#  Sys.sleep( 0.05 )
Sys.sleep( 0.05 )
Ball_0_OFF( x[i], y[i] )
}
# plot all quickly
plot( 0, 0, xlim = c( 0, Nx+10 ), ylim=c( -Ny-10, 0 )  )
for ( i in 1:Num ){
Ball_0( x[i], y[i] )
#  Sys.sleep( 0.05 )
#Sys.sleep( 0.1 )
#Ball_0_OFF( x[i], y[i] )
}
###################################
# the ball is ON
# with different leg position
Ball_0 <- function( cx, cy ) {
# body
symbols( cx+0, cy+0, circles = 2, fg = "blue", lwd = 2, inches = FALSE, add = TRUE )
symbols( cx+0, cy+0, circles = 1, fg = "cyan", bg = "yellow", lwd = 2, inches = FALSE, add = TRUE )
# legs
symbols( cx-1.5, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "green", bg = "red", inches = FALSE, add = TRUE )
symbols( cx+1.5, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "green", bg = "red", inches = FALSE, add = TRUE )
}
Ball_1 <- function( cx, cy ) {
# body
symbols( cx+0, cy+0, circles = 2, fg = "blue", lwd = 2, inches = FALSE, add = TRUE )
symbols( cx+0.5, cy+0, circles = 1, fg = "cyan", bg = "yellow", lwd = 2, inches = FALSE, add = TRUE )
# legs
symbols( cx-1, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "green", bg = "red", inches = FALSE, add = TRUE )
symbols( cx+2, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "green", bg = "red", inches = FALSE, add = TRUE )
}
Ball_2 <- function( cx, cy ) {
# body
symbols( cx+0, cy+0, circles = 2, fg = "blue", lwd = 2, inches = FALSE, add = TRUE )
symbols( cx-0.5, cy+0, circles = 1, fg = "cyan", bg = "yellow", lwd = 2, inches = FALSE, add = TRUE )
# legs
symbols( cx-2, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "green", bg = "red", inches = FALSE, add = TRUE )
symbols( cx+1, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "green", bg = "red", inches = FALSE, add = TRUE )
}
###################################
# for OFF the animation roles
# with different leg position
Ball_0_OFF <- function( cx, cy ) {
# body
symbols( cx+0, cy+0, circles = 2, fg = "white", lwd = 2, inches = FALSE, add = TRUE )
symbols( cx+0, cy+0, circles = 1, fg = "white", bg = "white", lwd = 2, inches = FALSE, add = TRUE )
# legs
symbols( cx-1.5, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "white", bg = "white", inches = FALSE, add = TRUE )
symbols( cx+1.5, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "white", bg = "white", inches = FALSE, add = TRUE )
}
Ball_1_OFF <- function( cx, cy ) {
# body
symbols( cx+0, cy+0, circles = 2, fg = "white", lwd = 2, inches = FALSE, add = TRUE )
symbols( cx+0.5, cy+0, circles = 1, fg = "white", bg = "white", lwd = 2, inches = FALSE, add = TRUE )
# legs
symbols( cx-1, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "white", bg = "white", inches = FALSE, add = TRUE )
symbols( cx+2, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "white", bg = "white", inches = FALSE, add = TRUE )
}
Ball_2_OFF <- function( cx, cy ) {
# body
symbols( cx+0, cy+0, circles = 2, fg = "white", lwd = 2, inches = FALSE, add = TRUE )
symbols( cx-0.5, cy+0, circles = 1, fg = "white", bg = "white", lwd = 2, inches = FALSE, add = TRUE )
# legs
symbols( cx-2, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "white", bg = "white", inches = FALSE, add = TRUE )
symbols( cx+1, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "white", bg = "white", inches = FALSE, add = TRUE )
}
frames = 50
for(i in 1:frames)
{
# creating a name for each plot file with leading zeros
if (i < 10)
{
name = paste('000',i,'plot.png',sep='')
}
if (i < 100 && i >= 10)
{
name = paste('00',i,'plot.png', sep='')
}
if (i >= 100)
{
name = paste('0', i,'plot.png', sep='')
}
x = seq(0, i, 1)
f.3 = dbinom(x, size = i, prob=.3)
f.7 = dbinom(x, size = i, prob=.7)
#saves the plot as a .png file in the working directory
png( name )
plot(x, f.3,
type='h',
xlim = c(0,frames), ylim = c(0,.7),
ylab ='probability',
main = paste( 'Binomial density with n = ', i),
col = 'red' )
lines(x,f.7,type='h',col='blue')
text(45, .6, 'p = .3', col='red')
text(45, .6, 'p = .7', col='blue', pos=1)
dev.off()
}
frames = 50
for(i in 1:frames)
{
# creating a name for each plot file with leading zeros
if (i < 10)
{
name = paste('000',i,'plot.png',sep='')
}
if (i < 100 && i >= 10)
{
name = paste('00',i,'plot.png', sep='')
}
if (i >= 100)
{
name = paste('0', i,'plot.png', sep='')
}
x = seq(0, i, 1)
f.3 = dbinom(x, size = i, prob=.3)
f.7 = dbinom(x, size = i, prob=.7)
Ball_0(10.5)
Ball_0 <- function( cx, cy ) {
# body
symbols( cx+0, cy+0, circles = 2, fg = "blue", lwd = 2, inches = FALSE, add = TRUE )
symbols( cx+0, cy+0, circles = 1, fg = "cyan", bg = "yellow", lwd = 2, inches = FALSE, add = TRUE )
# legs
symbols( cx-1.5, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "green", bg = "red", inches = FALSE, add = TRUE )
symbols( cx+1.5, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "green", bg = "red", inches = FALSE, add = TRUE )
}
Ball_0(10,5)
Ball_0(10,10)
Ball_0(5,4)
Ball_0(20,-50)
x <- c( -15:15, rep(15, 31), 15:-15, rep(-15, 31) )
y <- c( rep(15, 31), 15:-15, rep( -15, 31), -15:15 )
x
y
plot( x, y,
xlim = c( -25, 25 ), ylim=c( -25, 25 )  )
?Sys.sleep
Num <- length(x)   # 點的數量
# one way to animate the face
for ( i in 1:Num ){
myFace( x[i], y[i] )
Sys.sleep( 0.1 )  #停一秒鐘
}
plot( x, y,
xlim = c( -25, 25 ), ylim=c( -25, 25 )  )
# one way to animate the face
for ( i in 1:Num ){
myFace( x[i], y[i] )
Sys.sleep( 0.1 )  #停一秒鐘
}
plot( x, y,
xlim = c( -25, 25 ), ylim=c( -25, 25 )  )
Num <- length(x)   # 點的數量
# one way to animate the face
for ( i in 1:Num ){
Ball_0( x[i], y[i] )
Sys.sleep( 0.1 )  #停一秒鐘
}
Ball_0(12,12)
Ball_0 <- function( cx, cy ) {
# body
symbols( cx+0, cy+0, circles = 2, fg = "blue", lwd = 2, inches = FALSE, add = TRUE )
symbols( cx+0, cy+0, circles = 1, fg = "cyan", bg = "yellow", lwd = 2, inches = FALSE, add = TRUE )
# legs
symbols( cx-1.5, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "green", bg = "red", inches = FALSE, add = TRUE )
symbols( cx+1.5, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "green", bg = "red", inches = FALSE, add = TRUE )
}
Ball_1 <- function( cx, cy ) {
# body
symbols( cx+0, cy+0, circles = 2, fg = "blue", lwd = 2, inches = FALSE, add = TRUE )
symbols( cx+0.5, cy+0, circles = 1, fg = "cyan", bg = "yellow", lwd = 2, inches = FALSE, add = TRUE )
# legs
symbols( cx-1, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "green", bg = "red", inches = FALSE, add = TRUE )
symbols( cx+2, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "green", bg = "red", inches = FALSE, add = TRUE )
}
Ball_2 <- function( cx, cy ) {
# body
symbols( cx+0, cy+0, circles = 2, fg = "blue", lwd = 2, inches = FALSE, add = TRUE )
symbols( cx-0.5, cy+0, circles = 1, fg = "cyan", bg = "yellow", lwd = 2, inches = FALSE, add = TRUE )
# legs
symbols( cx-2, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "green", bg = "red", inches = FALSE, add = TRUE )
symbols( cx+1, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "green", bg = "red", inches = FALSE, add = TRUE )
}
###################################
# for OFF the animation roles
# with different leg position
Ball_0_OFF <- function( cx, cy ) {
# body
symbols( cx+0, cy+0, circles = 2, fg = "white", lwd = 2, inches = FALSE, add = TRUE )
symbols( cx+0, cy+0, circles = 1, fg = "white", bg = "white", lwd = 2, inches = FALSE, add = TRUE )
# legs
symbols( cx-1.5, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "white", bg = "white", inches = FALSE, add = TRUE )
symbols( cx+1.5, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "white", bg = "white", inches = FALSE, add = TRUE )
}
Ball_1_OFF <- function( cx, cy ) {
# body
symbols( cx+0, cy+0, circles = 2, fg = "white", lwd = 2, inches = FALSE, add = TRUE )
symbols( cx+0.5, cy+0, circles = 1, fg = "white", bg = "white", lwd = 2, inches = FALSE, add = TRUE )
# legs
symbols( cx-1, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "white", bg = "white", inches = FALSE, add = TRUE )
symbols( cx+2, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "white", bg = "white", inches = FALSE, add = TRUE )
}
Ball_2_OFF <- function( cx, cy ) {
# body
symbols( cx+0, cy+0, circles = 2, fg = "white", lwd = 2, inches = FALSE, add = TRUE )
symbols( cx-0.5, cy+0, circles = 1, fg = "white", bg = "white", lwd = 2, inches = FALSE, add = TRUE )
# legs
symbols( cx-2, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "white", bg = "white", inches = FALSE, add = TRUE )
symbols( cx+1, cy-3.5, rectangles = matrix(c(1.5, 1), nrow =1), fg = "white", bg = "white", inches = FALSE, add = TRUE )
}
plot( 0, 0, xlim = c( -25, 25 ), ylim=c( -25, 25 )  )
# ON ON ON OFF OFF OFF
Ball_0(   0, 10 )
Ball_1( -10, 10 )
Ball_2(  10, 10 )
Ball_0_OFF(   0, 10 )
Ball_1_OFF( -10, 10 )
Ball_2_OFF(  10, 10 )
# ON and OFF
Ball_0(  0, -5 )
Ball_0_OFF( 0, -5 )
Ball_1(  10, -5 )
Ball_1_OFF(  10, -5 )
Ball_2(  -10, -5 )
Ball_2_OFF(  -10, -5 )
###########################
Ball_0(12,12)
x <- c( -15:15, rep(15, 31), 15:-15, rep(-15, 31) )
y <- c( rep(15, 31), 15:-15, rep( -15, 31), -15:15 )
plot( x, y,
xlim = c( -25, 25 ), ylim=c( -25, 25 )  )
Num <- length(x)   # 點的數量
# one way to animate the face
for ( i in 1:Num ){
Ball_0( x[i], y[i] )
Sys.sleep( 0.1 )  #停一秒鐘
}
x <- sin(1:90/45*pi)*15
y <- cos(1:90/45*pi)*15
plot( x, y,
xlim = c( -25, 25 ), ylim=c( -25, 25 )  )
# good way to animate the face
for ( i in 1:Num ){
myFace( x[i], y[i] )
#line <- readline()
Sys.sleep( 0.1 )
myFaceOff( x[i], y[i] )
#line <- readline()
}
myFace <- function( cx, cy ) {
# 臉輪廓
symbols( cx+0, cy+0,
circles = 4,
fg = "blue",
lwd = 2,
inches = FALSE, add = TRUE )
# 眼睛
symbols( cx-1.5, cy+1.5,
circles = 0.5,
fg = "dark violet", bg = "purple",
inches = FALSE, add = TRUE )
symbols( cx+1.5, cy+1.5,
circles = 0.5,
fg = "dark violet", bg = "purple",
inches = FALSE, add = TRUE )
# 眉毛
symbols( cx-1.5, cy+3.5,
rectangles = matrix(c(1.5, 0.5), nrow =1),
fg = "gray",
inches = FALSE, add = TRUE )
symbols( cx+1.5, cy+3.5,
rectangles = matrix(c(1.5, 0.5), nrow =1),
fg = "gray",
inches = FALSE, add = TRUE )
# 鼻子
symbols( cx+0, cy-0.5,
rectangles = matrix(c(0.5, 2), nrow =1),
fg = "green", bg = "lightgreen",
inches = FALSE, add = TRUE )
# 嘴巴
symbols( cx+0, cy-3.5,
squares = 1.5,
fg = "red",
lwd = 2, inches = FALSE, add = TRUE )
# 鬍子
polygon( c( cx-1.5, cx-2, cx-3), c( cy-2, cy-2, cy-3),
col = "orange" )
polygon( c( cx+1.5, cx+2, cx+3), c( cy-2, cy-2, cy-3),
col = "orange" )
}
# good way to animate the face
for ( i in 1:Num ){
myFace( x[i], y[i] )
#line <- readline()
Sys.sleep( 0.1 )
myFaceOff( x[i], y[i] )
#line <- readline()
}
# good way to animate the face
for ( i in 1:Num ){
myFace( x[i], y[i] )
#line <- readline()
Sys.sleep( 1 )
myFaceOff( x[i], y[i] )
#line <- readline()
}
myFaceOff <- function( cx, cy ) {
# 臉輪廓
symbols( cx+0, cy+0,
circles = 4,
fg = "white",
lwd = 2, inches = FALSE, add = TRUE )
# 眼睛
symbols( cx-1.5, cy+1.5,
circles = 0.5,
fg = "white", bg = "white",
inches = FALSE, add = TRUE )
symbols( cx+1.5, cy+1.5,
circles = 0.5,
fg = "white", bg = "white",
inches = FALSE, add = TRUE )
# 眉毛
symbols( cx-1.5, cy+3.5,
rectangles = matrix(c(1.5, 0.5), nrow =1),
fg = "white",
inches = FALSE, add = TRUE )
symbols( cx+1.5, cy+3.5,
rectangles = matrix(c(1.5, 0.5), nrow =1),
fg = "white",
inches = FALSE, add = TRUE )
# 鼻子
symbols( cx+0, cy-0.5,
rectangles = matrix(c(0.5, 2), nrow =1),
fg = "white", bg = "white",
inches = FALSE, add = TRUE )
# 嘴巴
symbols( cx+0, cy-3.5,
squares = 1.5, fg = "white",
lwd = 2,
inches = FALSE, add = TRUE )
# 鬍子
polygon( c( cx-1.5, cx-2, cx-3), c( cy-2, cy-2, cy-3),
col = "white", border = "white" )
polygon( c( cx+1.5, cx+2, cx+3), c( cy-2, cy-2, cy-3),
col = "white", border = "white" )
}
# good way to animate the face
for ( i in 1:Num ){
myFace( x[i], y[i] )
#line <- readline()
Sys.sleep( 1 )
myFaceOff( x[i], y[i] )
#line <- readline()
}
x <- sin(1:90/45*pi)*15
y <- cos(1:90/45*pi)*15
plot( x, y,
xlim = c( -25, 25 ), ylim=c( -25, 25 )  )
# good way to animate the face
# good way to animate the face
for ( i in 1:Num ){
myFace( x[i], y[i] )
#line <- readline()
Sys.sleep( 0.1 )
myFaceOff( x[i], y[i] )
#line <- readline()
}
x <- c( -15:15, 15, 15:-15 )
y <- c( 1:15, 15, 15:1, 0, -1:-15, -15, -15:-1 )
plot( x, y,
xlim = c( -25, 25 ), ylim=c( -25, 25 )  )
# good way to animate the face
for ( i in 1:Num ){
myFace( x[i], y[i] )
#line <- readline()
Sys.sleep( 0.1 )
myFaceOff( x[i], y[i] )
#line <- readline()
}
x <- sample( -15:15, 20 )
y <- sample( -15:15, 20 )
plot( x, y,
xlim = c( -25, 25 ), ylim=c( -25, 25 )  )
# good way to animate the face
for ( i in 1:Num ){
myFace( x[i], y[i] )
#line <- readline()
Sys.sleep( 1 )
myFaceOff( x[i], y[i] )
#line <- readline()
}
mySort( 10:1, 1 )
mySort <- function( x, plottype ) {
itemCount <- length( x )
repeat {
hasChanged <- FALSE
itemCount <- itemCount - 1
if ( itemCount >= 1 ){
for( k in 1 : itemCount ) {
if ( x[ k ] > x[ k+1 ] ) {
t <- x[ k ]
x[ k ] <- x[ k+1 ]
x[ k+1 ] <- t
hasChanged <- TRUE
}
# print( c( k , x ) )
# bubble sort plot, vertical plot
if( plottype == 1 ){
plot( x, 1:length(x), pch = 1, cex = 8 )
text( x, 1:length(x), as.character( x ), col = "red", cex=2 )
}
# bubble sort plot, horizontal plot
if( plottype == 2 ){
plot( x, pch = 1, cex = 8  )
text( 1:length(x), x, as.character( x ), col = "red", cex=2 )
}
# some waiting time
Sys.sleep(0.5)
}
}
if ( !hasChanged ) break;
}
return( x )
}
mySort( 5:1, 1 )
mySort( datain, 1)
f <- function(x) 0.01 * x^3 * cos(x) - 0.2 * x^2 * sin(x) + 0.05 * x - 1
curve( f,
from = -10, to = 10 )
curve( f,
from = -10, to = 10,
n = 1001 )
curve( f,
from = -10, to = 10,
lty = 1, col = "red", ylab = "" )
curve( g,
add = TRUE,
lty = 2, col = "blue" )
legend( "topright",
legend = c("f", "g"),
lty = 1:2,
col = c("red", "blue"))
for ( i in 1:Num ){
myFace( x[i], y[i] )
#line <- readline()
Sys.sleep( 1 )
myFaceOff( x[i], y[i] )
#line <- readline()
}
# one way to animate the face
for ( i in 1:Num ){
Ball_0( x[i], y[i] )
Sys.sleep( 0.1 )  #停一秒鐘
}
plot( x, y,
xlim = c( -25, 25 ), ylim=c( -25, 25 )  )
Num <- length(x)   # 點的數量
# one way to animate the face
for ( i in 1:Num ){
Ball_0( x[i], y[i] )
Sys.sleep( 0.1 )  #停一秒鐘
}
install.packages('states')
library(states)
library(dplyr)
medianGdpPercap
library(gapminder)
install.packages(stats)
?medianGdpPercap
??medianGdpPercap
?summarize
summarize(iris)
summarize(car)
summarize(cars)
box_office <- c(new_hope,return_jedi,empire_strikes)
c(asdf,weweg,wgersdg)
setwd("C:/Users/USER/Desktop/github/Week5")
shiny::runApp('jerry')
colnames(dta)[19:24]
dta
dta <- read.csv("UCI_Credit_Card.csv")
colnames(dta)[19:24]
runApp('jerry')
runApp('jerry')
runApp('jerry')
runApp()
runApp('jerry')
names(iris)[[2]])
names(iris)[[2]]
names(iris)
names(iris)[2]
dta$default.payment.next.month
runApp('jerry')
runApp('jerry')
runApp('jerry')
runApp('jerry')
runApp('jerry')
runApp('jerry')
runApp('jerry')
names(dta)[6]
names(dta)[2]
runApp('jerry')
runApp('jerry')
runApp('jerry')
runApp('jerry')
runApp('jerry')
runApp('jerry')
runApp('jerry')
runApp('jerry')
runApp('jerry')
runApp('jerry')
